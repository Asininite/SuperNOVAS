.TH "src/solsys-cspice.c" 3 "Version v1.2" "SuperNOVAS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/solsys-cspice.c
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBcspice_add_kernel\fP (const char *filename)"
.br
.ti -1c
.RI "int \fBcspice_remove_kernel\fP (const char *filename)"
.br
.ti -1c
.RI "int \fBnovas_use_cspice\fP ()"
.br
.ti -1c
.RI "int \fBnovas_use_cspice_ephem\fP ()"
.br
.ti -1c
.RI "int \fBnovas_use_cspice_planets\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBAuthor\fP
.RS 4
A\&. Kovacs 
.RE
.PP
\fBSince\fP
.RS 4
1\&.2
.RE
.PP
SuperNOVAS Solar-system ephemeris lookup implementation via the NAIF CSPICE library
.PP
This is an optional component of SuperNOVAS, which interfaces to the NAIF CSPICE Toolkit\&. As such, you may need the CSPICE runtime libraries in an accessible location (such as in \fC/usr/lib\fP), and you will need development files (C headers and unversioned libraries) also to build\&. Thus, this module is compiled only if \fCCALCEPH_SUPPORT\fP is set to 1 prior to the build\&.
.PP
Before building SuperNOVAS against CSPICE, you might want to check out the \fCSmithsonian/cspice-sharedlib\fP repository on Github to facilitate the building of CSPICE as a shared library instead of the static library built by the uptream distribution\&.
.PP
REFERENCES: 
.PD 0
.IP "1." 4
The NAIF CSPICE Toolkit: https://naif.jpl.nasa.gov/naif/toolkit.html 
.IP "2." 4
the Smithsonian/cspice-sharedlib repository: https://github.com/Smithsonian/cspice-sharedlib 
.PP
.PP
\fBSee also\fP
.RS 4
\fBsolsys-calceph\&.c\fP 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int cspice_add_kernel (const char * filename)"
Adds a SPICE kernel to the currently managed open kernels\&. Subsequent ephemeris lookups through CSPICE will use the added kernel\&. It's simply a wrapper around the CSPICE \fCfurnsh_c()\fP routine, with graceful error handling\&. You can of course add kernels using \fCfurnsh_c()\fP directly to the same effect\&.
.PP
REFERENCES: 
.PD 0
.IP "1." 4
https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/furnsh_c.html 
.PP
.PP
\fBParameters\fP
.RS 4
\fIfilename\fP The fully qualified path to the ephemeris kernel data (e\&.g\&. '/data/ephem/de440s\&.bsp') 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or else -1 if there was an error (errno will be set to EINVAL)\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBcspice_remove_kernel()\fP 
.PP
\fBnovas_use_cspice()\fP
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP

.SS "int cspice_remove_kernel (const char * filename)"
Removes a SPICE kernel from the currently managed open kernels\&. Subsequent ephemeris lookups through CSPICE will not use the removed kernel data\&. It's simply a wrapper around the CSPICE \fCunload_c()\fP routine, with graceful error handling\&. You can of course remove kernels using \fCunload_c()\fP directly to the same effect\&.
.PP
REFERENCES: 
.PD 0
.IP "1." 4
https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/unload_c.html 
.PP
.PP
\fBParameters\fP
.RS 4
\fIfilename\fP The fully qualified path to the ephemeris kernel data (e\&.g\&. '/data/ephem/de440s\&.bsp') 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or else -1 if there was an error (errno will be set to EINVAL)\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBcspice_add_kernel()\fP
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP

.SS "int novas_use_cspice ()"
Sets CSPICE as the default ephemeris provider for all types of Solar-system objects (both NOVAS_PLANET and NOVAS_EPHEM_OBJECT types)\&.
.PP
CSPICE is configured to suppress error messages and to not exit on errors, since we will check errors and handle them ourselves\&. You can adjust the behavior after this call with the CSPICE errprt_c() and erract_c() functions, respectively\&.
.PP
\fBReturns\fP
.RS 4
0
.RE
.PP
\fBSee also\fP
.RS 4
\fBnovas_use_cspice_planets()\fP 
.PP
\fBnovas_use_cspice_ephem()\fP 
.PP
\fBcspice_add_kernel()\fP
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP

.PP
References \fBnovas_use_cspice_ephem()\fP, and \fBnovas_use_cspice_planets()\fP\&.
.SS "int novas_use_cspice_ephem ()"
Sets a ephemeris provider for NOVAS_EPHEM_OBJECT types using the NAIF CSPICE library\&.
.PP
CSPICE is configured to suppress error messages and to not exit on errors, since we will check errors and handle them ourselves\&. You can adjust the behavior after this call with the CSPICE errprt_c() and erract_c() functions, respectively\&.
.PP
\fBReturns\fP
.RS 4
0
.RE
.PP
\fBSee also\fP
.RS 4
\fBnovas_use_cspice_planets()\fP 
.PP
\fBnovas_use_cspice()\fP 
.PP
\fBcspice_add_kernel()\fP 
.PP
\fBset_ephem_provider()\fP
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP

.PP
References \fBset_ephem_provider()\fP\&.
.SS "int novas_use_cspice_planets ()"
Sets CSPICE as the ephemeris provider for the major planets (and Sun, Moon, and SSB) using the NAIF CSPICE library\&.
.PP
CSPICE is configured to suppress error messages and to not exit on errors, since we will check errors and handle them ourselves\&. You can adjust the behavior after this call with the CSPICE errprt_c() and erract_c() functions, respectively\&.
.PP
\fBReturns\fP
.RS 4
0
.RE
.PP
\fBSee also\fP
.RS 4
\fBnovas_use_cspice_ephem()\fP 
.PP
\fBnovas_use_cspice()\fP 
.PP
\fBcspice_add_kernel()\fP 
.PP
\fBset_planet_provider()\fP 
.PP
\fBset_planet_provider_hp()\fP
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP

.PP
References \fBset_planet_provider()\fP, and \fBset_planet_provider_hp()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for SuperNOVAS from the source code\&.
