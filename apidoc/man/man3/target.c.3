.TH "src/target.c" 3 "Version v1.3" "SuperNOVAS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/target.c
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB_DEFAULT_SOURCE\fP"
.br
.RI "strcasecmp() feature macro starting glibc 2\&.20 (2014-09-08) "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "short \fBmake_cat_entry\fP (const char *restrict star_name, const char *restrict catalog, long cat_num, double ra, double dec, double pm_ra, double pm_dec, double parallax, double \fBrad_vel\fP, \fBcat_entry\fP *star)"
.br
.ti -1c
.RI "int \fBmake_cat_object\fP (const \fBcat_entry\fP *star, \fBobject\fP *source)"
.br
.ti -1c
.RI "int \fBmake_cat_object_sys\fP (const \fBcat_entry\fP *star, const char *restrict system, \fBobject\fP *source)"
.br
.ti -1c
.RI "int \fBmake_ephem_object\fP (const char *name, long num, \fBobject\fP *body)"
.br
.ti -1c
.RI "short \fBmake_object\fP (enum \fBnovas_object_type\fP type, long number, const char *name, const \fBcat_entry\fP *star, \fBobject\fP *source)"
.br
.ti -1c
.RI "int \fBmake_orbital_object\fP (const char *name, long num, const \fBnovas_orbital\fP *orbit, \fBobject\fP *body)"
.br
.ti -1c
.RI "int \fBmake_planet\fP (enum \fBnovas_planet\fP num, \fBobject\fP *restrict planet)"
.br
.ti -1c
.RI "int \fBmake_redshifted_cat_entry\fP (const char *name, double ra, double dec, double z, \fBcat_entry\fP *source)"
.br
.ti -1c
.RI "int \fBmake_redshifted_object\fP (const char *name, double ra, double dec, double z, \fBobject\fP *source)"
.br
.ti -1c
.RI "int \fBmake_redshifted_object_sys\fP (const char *name, double ra, double dec, const char *restrict system, double z, \fBobject\fP *source)"
.br
.ti -1c
.RI "void \fBnovas_case_sensitive\fP (int value)"
.br
.ti -1c
.RI "double \fBnovas_helio_dist\fP (double jd_tdb, const \fBobject\fP *restrict source, double *restrict rate)"
.br
.ti -1c
.RI "enum \fBnovas_planet\fP \fBnovas_planet_for_name\fP (const char *restrict name)"
.br
.ti -1c
.RI "double \fBnovas_solar_power\fP (double jd_tdb, const \fBobject\fP *restrict source)"
.br
.ti -1c
.RI "int \fBproper_motion\fP (double jd_tdb_in, const double *pos, const double *restrict vel, double jd_tdb_out, double *out)"
.br
.ti -1c
.RI "int \fBstarvectors\fP (const \fBcat_entry\fP *restrict star, double *restrict pos, double *restrict motion)"
.br
.ti -1c
.RI "short \fBtransform_cat\fP (enum \fBnovas_transform_type\fP option, double jd_tt_in, const \fBcat_entry\fP *in, double jd_tt_out, const char *out_id, \fBcat_entry\fP *out)"
.br
.ti -1c
.RI "int \fBtransform_hip\fP (const \fBcat_entry\fP *hipparcos, \fBcat_entry\fP *hip_2000)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBDate\fP
.RS 4
Created on Mar 6, 2025 
.RE
.PP
\fBAuthor\fP
.RS 4
G\&. Kaplan and Attila Kovacs
.RE
.PP
Functions that define an observing target\&. 
.SH "Function Documentation"
.PP 
.SS "short make_cat_entry (const char *restrict star_name, const char *restrict catalog, long cat_num, double ra, double dec, double pm_ra, double pm_dec, double parallax, double rad_vel, \fBcat_entry\fP * star)"
Populates the data structure for a 'catalog' source, such as a star\&.
.PP
\fBParameters\fP
.RS 4
\fIstar_name\fP Object name (less than SIZE_OF_OBJ_NAME in length)\&. It may be NULL if not relevant\&. 
.br
\fIcatalog\fP Catalog identifier (less than SIZE_OF_CAT_NAME in length)\&. E\&.g\&. 'HIP' = Hipparcos, 'TY2' = Tycho-2\&. It may be NULL if not relevant\&. 
.br
\fIcat_num\fP Object number in the catalog\&. 
.br
\fIra\fP [h] Right ascension of the object (hours)\&. 
.br
\fIdec\fP [deg] Declination of the object (degrees)\&. 
.br
\fIpm_ra\fP [mas/yr] Proper motion in right ascension (milliarcseconds/year)\&. 
.br
\fIpm_dec\fP [mas/yr] Proper motion in declination (milliarcseconds/year)\&. 
.br
\fIparallax\fP [mas] Parallax (milliarcseconds)\&. 
.br
\fIrad_vel\fP [km/s] Radial velocity relative to the Solar-System Barycenter (SSB) To convert velocities defined against the Local Standard of Rest (LSR), you may use \fC\fBnovas_lsr_to_ssb_vel()\fP\fP to convert appropriately\&. 
.br
\fIstar\fP Pointer to data structure to populate\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or -1 if the output argument is NULL, 1 if the 'star_name' is too long or 2 if the 'catalog' name is too long\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBnovas_lsr_to_ssb_vel()\fP 
.PP
\fBmake_redshifted_cat_entry()\fP 
.PP
\fBmake_cat_object_sys()\fP 
.PP
\fBtransform_cat()\fP 
.RE
.PP

.PP
References \fBcat_entry::catalog\fP, \fBcat_entry::dec\fP, \fBcat_entry::parallax\fP, \fBcat_entry::promodec\fP, \fBcat_entry::promora\fP, \fBcat_entry::ra\fP, \fBrad_vel()\fP, \fBcat_entry::radialvelocity\fP, \fBSIZE_OF_CAT_NAME\fP, \fBSIZE_OF_OBJ_NAME\fP, \fBcat_entry::starname\fP, and \fBcat_entry::starnumber\fP\&.
.SS "int make_cat_object (const \fBcat_entry\fP * star, \fBobject\fP * source)"
Populates and object data structure with the data for a catalog source\&. The input source must be defined with ICRS coordinates\&. To create objects with other types of coordiantes use \fCmake_cat_object_epoch()\fP instead\&.
.PP
\fBParameters\fP
.RS 4
\fIstar\fP Pointer to structure to populate with the catalog data for a celestial object located outside the solar system, specified with ICRS coordinates\&. 
.br
\fIsource\fP Pointer to the celestial object data structure to be populated\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or -1 if either argument is NULL, or else 5 if 'name' is too long\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_cat_object_sys()\fP 
.PP
\fBmake_cat_entry()\fP 
.PP
\fBmake_planet()\fP 
.PP
\fBmake_ephem_object()\fP 
.PP
\fBnovas_geom_posvel()\fP 
.PP
\fBplace()\fP
.RE
.PP
\fBSince\fP
.RS 4
1\&.1 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP

.PP
References \fBmake_object()\fP, \fBNOVAS_CATALOG_OBJECT\fP, \fBcat_entry::starname\fP, and \fBcat_entry::starnumber\fP\&.
.SS "int make_cat_object_sys (const \fBcat_entry\fP * star, const char *restrict system, \fBobject\fP * source)"
Populates and object data structure with the data for a catalog source for a given system of catalog coordinates\&.
.PP
\fBParameters\fP
.RS 4
\fIstar\fP Pointer to structure to populate with the catalog data for a celestial object located outside the solar system\&. 
.br
\fIsystem\fP Input catalog coordinate system epoch, e\&.g\&. 'ICRS', 'B1950\&.0', 'J2000\&.0', 'FK4', 'FK5', or 'HIP'\&. In general, any Besselian or Julian year epoch can be used by year (e\&.g\&. 'B1933\&.193' or 'J2022\&.033'), or else the fixed value listed\&. If 'B' or 'J' is ommitted in front of the epoch year, then Besselian epochs are assumed prior to 1984\&.0\&. 
.br
\fIsource\fP Pointer to the celestial object data structure to be populated with the corresponding ICRS catalog coordinates, after appying proper-motion and precession corrections as appropriate\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or -1 if any argument is NULL or if the input 'system' is invalid, or else 5 if 'name' is too long\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_cat_object()\fP 
.PP
\fBmake_redshifted_object_sys()\fP 
.PP
novas_jd_for_epoch() 
.PP
\fBmake_cat_entry()\fP 
.PP
\fBplace()\fP 
.PP
\fBNOVAS_SYSTEM_ICRS\fP 
.PP
\fBNOVAS_SYSTEM_HIP\fP 
.PP
\fBNOVAS_SYSTEM_J2000\fP 
.PP
\fBNOVAS_SYSTEM_B1950\fP
.RE
.PP
\fBSince\fP
.RS 4
1\&.3 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP

.PP
References \fBmake_cat_object()\fP, and \fBobject::star\fP\&.
.SS "int make_ephem_object (const char * name, long num, \fBobject\fP * body)"
Sets a celestial object to be a Solar-system ephemeris body\&. Typically this would be used to define minor planets, asteroids, comets and planetary satellites\&.
.PP
\fBParameters\fP
.RS 4
\fIname\fP Name of object\&. By default converted to upper-case, unless \fBnovas_case_sensitive()\fP was called with a non-zero argument\&. Max\&. SIZE_OF_OBJ_NAME long, including termination\&. If the ephemeris provider uses names, then the name should match those of the ephemeris provider -- otherwise it is not important\&. 
.br
\fInum\fP Solar-system body ID number (e\&.g\&. NAIF)\&. The number should match the needs of the ephemeris provider used with NOVAS\&. (If the ephemeris provider is by name and not ID number, then the number here is not important)\&. 
.br
\fIbody\fP Pointer to structure to populate\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or else -1 if the 'body' pointer is NULL or the name is too long\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBset_ephem_provider()\fP 
.PP
\fBmake_planet()\fP 
.PP
\fBmake_cat_entry()\fP 
.PP
\fBnovas_geom_posvel()\fP 
.PP
\fBplace()\fP
.RE
.PP
\fBSince\fP
.RS 4
1\&.0 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP

.PP
References \fBmake_object()\fP, and \fBNOVAS_EPHEM_OBJECT\fP\&.
.SS "short make_object (enum \fBnovas_object_type\fP type, long number, const char * name, const \fBcat_entry\fP * star, \fBobject\fP * source)"
Populates an object data structure using the parameters provided\&. By default (for compatibility with NOVAS C) source names are converted to upper-case internally\&. You can however enable case-sensitive processing by calling \fBnovas_case_sensitive()\fP before\&.
.PP
NOTES: 
.PD 0
.IP "1." 4
This call does not initialize the \fCorbit\fP field (added in v1\&.2) with zeroes to remain ABI compatible with versions <1\&.2, and to avoid the possiblity of segfaulting if used to initialize a legacy \fCobject\fP variable\&. 
.PP
.PP
\fBParameters\fP
.RS 4
\fItype\fP The type of object\&. NOVAS_PLANET (0), NOVAS_EPHEM_OBJECT (1) or NOVAS_CATALOG_OBJECT (2), or NOVAS_ORBITAL_OBJECT (3)\&. 
.br
\fInumber\fP The novas ID number (for solar-system bodies only, otherwise ignored) 
.br
\fIname\fP The name of the object (case insensitive)\&. It should be shorter than SIZE_OF_OBJ_NAME or else an error will be returned\&. The name is converted to upper internally unless \fBnovas_case_sensitive()\fP was called before to change that\&. 
.br
\fIstar\fP Pointer to structure to populate with the catalog data for a celestial object located outside the solar system\&. Used only if type is NOVAS_CATALOG_OBJECT, otherwise ignored and can be NULL\&. 
.br
\fIsource\fP Pointer to the celestial object data structure to be populated\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or -1 if 'cel_obj' is NULL or when type is NOVAS_CATALOG_OBJECT and 'star' is NULL, or else 1 if 'type' is invalid, 2 if 'number' is out of legal range or 5 if 'name' is too long\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBnovas_case_sensitive()\fP 
.PP
\fBmake_cat_object()\fP 
.PP
\fBmake_redshifted_object()\fP 
.PP
\fBmake_planet()\fP 
.PP
\fBmake_ephem_object()\fP 
.PP
\fBmake_orbital_object()\fP 
.PP
\fBnovas_geom_posvel()\fP 
.PP
\fBplace()\fP 
.RE
.PP

.PP
References \fBobject::name\fP, \fBNOVAS_CATALOG_OBJECT\fP, \fBNOVAS_OBJECT_TYPES\fP, \fBNOVAS_ORBITAL_OBJECT\fP, \fBNOVAS_PLANET\fP, \fBNOVAS_PLANETS\fP, \fBobject::number\fP, \fBobject::star\fP, and \fBobject::type\fP\&.
.SS "int make_orbital_object (const char * name, long num, const \fBnovas_orbital\fP * orbit, \fBobject\fP * body)"
Sets a celestial object to be a Solar-system orbital body\&. Typically this would be used to define minor planets, asteroids, comets, or even planetary satellites\&.
.PP
\fBParameters\fP
.RS 4
\fIname\fP Name of object\&. It may be NULL if not relevant\&. 
.br
\fInum\fP Solar-system body ID number (e\&.g\&. NAIF)\&. It is not required and can be set e\&.g\&. to -1 if not relevant to the caller\&. 
.br
\fIorbit\fP The orbital parameters to adopt\&. The data will be copied, not referenced\&. 
.br
\fIbody\fP Pointer to structure to populate\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or else -1 if the 'orbit' or 'body' pointer is NULL or the name is too long\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBnovas_orbit_posvel()\fP 
.PP
\fBmake_planet()\fP 
.PP
\fBmake_ephem_object()\fP 
.PP
\fBnovas_geom_posvel()\fP 
.PP
\fBplace()\fP
.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP

.PP
References \fBmake_object()\fP, \fBNOVAS_ORBITAL_OBJECT\fP, and \fBobject::orbit\fP\&.
.SS "int make_planet (enum \fBnovas_planet\fP num, \fBobject\fP *restrict planet)"
Sets a celestial object to be a major planet, or the Sun, Moon, Solar-system Barycenter, etc\&.
.PP
\fBParameters\fP
.RS 4
\fInum\fP Planet ID number (NOVAS convention) 
.br
\fIplanet\fP Pointer to structure to populate\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or else -1 if the 'planet' pointer is NULL\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_ephem_object()\fP 
.PP
\fBmake_cat_entry()\fP 
.PP
\fBplace()\fP
.RE
.PP
\fBSince\fP
.RS 4
1\&.0 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP

.PP
References \fBmake_object()\fP, \fBNOVAS_PLANET\fP, \fBNOVAS_PLANET_NAMES_INIT\fP, and \fBNOVAS_PLANETS\fP\&.
.SS "int make_redshifted_cat_entry (const char * name, double ra, double dec, double z, \fBcat_entry\fP * source)"
Populates a celestial object data structure with the parameters for a redhifted catalog source, such as a distant quasar or galaxy\&. It is similar to \fC\fBmake_cat_object()\fP\fP except that it takes a Doppler-shift (z) instead of radial velocity and it assumes no parallax and no proper motion (appropriately for a distant redshifted source)\&. The catalog name is set to \fCEXT\fP to indicate an extragalactic source, and the catalog number defaults to 0\&. The user may change these default field values as appropriate afterwards, if necessary\&.
.PP
\fBParameters\fP
.RS 4
\fIname\fP Object name (less than SIZE_OF_OBJ_NAME in length)\&. It may be NULL\&. 
.br
\fIra\fP [h] Right ascension of the object (hours)\&. 
.br
\fIdec\fP [deg] Declination of the object (degrees)\&. 
.br
\fIz\fP Redhift value (\*<obs\*>  / \*<rest\*>  - 1 = f\*<rest\*>  / f\*<obs\*>  - 1)\&. 
.br
\fIsource\fP Pointer to structure to populate\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or 5 if 'name' is too long, else -1 if the 'source' pointer is NULL\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_redshifted_object_sys()\fP 
.PP
\fBnovas_v2z()\fP
.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP

.PP
References \fBmake_cat_entry()\fP, and \fBnovas_z2v()\fP\&.
.SS "int make_redshifted_object (const char * name, double ra, double dec, double z, \fBobject\fP * source)"
Populates a celestial object data structure with the parameters for a redhifted catalog source, such as a distant quasar or galaxy\&. It is similar to \fC\fBmake_cat_object()\fP\fP except that it takes a Doppler-shift (z) instead of radial velocity and it assumes no parallax and no proper motion (appropriately for a distant redshifted source)\&. The catalog name is set to \fCEXT\fP to indicate an extragalactic source, and the catalog number defaults to 0\&. The user may change these default field values as appropriate afterwards, if necessary\&.
.PP
\fBParameters\fP
.RS 4
\fIname\fP Object name (less than SIZE_OF_OBJ_NAME in length)\&. It may be NULL\&. 
.br
\fIra\fP [h] ICRS Right ascension of the object (hours)\&. 
.br
\fIdec\fP [deg] ICRS Declination of the object (degrees)\&. 
.br
\fIz\fP Redhift value (\*<obs\*>  / \*<rest\*>  - 1 = f\*<rest\*>  / f\*<obs\*>  - 1)\&. 
.br
\fIsource\fP Pointer to structure to populate\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or 5 if 'name' is too long, else -1 if the 'source' pointer is NULL\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_redshifted_object_sys()\fP 
.PP
\fBmake_cat_object()\fP 
.PP
\fBnovas_v2z()\fP
.RE
.PP
\fBSince\fP
.RS 4
1\&.2 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP

.PP
References \fBmake_cat_object()\fP, and \fBmake_redshifted_cat_entry()\fP\&.
.SS "int make_redshifted_object_sys (const char * name, double ra, double dec, const char *restrict system, double z, \fBobject\fP * source)"
Populates a celestial object data structure with the parameters for a redhifted catalog source, such as a distant quasar or galaxy, for a given system of catalog coordinates\&.
.PP
\fBParameters\fP
.RS 4
\fIname\fP Object name (less than SIZE_OF_OBJ_NAME in length)\&. It may be NULL\&. 
.br
\fIra\fP [h] ICRS Right ascension of the object (hours)\&. 
.br
\fIdec\fP [deg] ICRS Declination of the object (degrees)\&. 
.br
\fIsystem\fP Input catalog coordinate system epoch, e\&.g\&. 'ICRS', 'B1950\&.0', 'J2000\&.0', 'FK4', 'FK5', or 'HIP'\&. In general, any Besselian or Julian year epoch can be used by year (e\&.g\&. 'B1933\&.193' or 'J2022\&.033'), or else the fixed value listed\&. If 'B' or 'J' is ommitted in front of the epoch year, then Besselian epochs are assumed prior to 1984\&.0\&. 
.br
\fIz\fP Redhift value (\*<obs\*>  / \*<rest\*>  - 1 = f\*<rest\*>  / f\*<obs\*>  - 1)\&. 
.br
\fIsource\fP Pointer to the celestial object data structure to be populated with the corresponding ICRS catalog coordinates\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or -1 if any of the pointer arguments is NULL or the 'system' is invalid, or else 1 if 'type' is invalid, 2 if 'number' is out of legal range or 5 if 'name' is too long\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_redshifted_object()\fP 
.PP
\fBmake_cat_object_sys()\fP 
.PP
novas_jd_for_epoch() 
.PP
\fBplace()\fP 
.PP
\fBNOVAS_SYSTEM_ICRS\fP 
.PP
\fBNOVAS_SYSTEM_HIP\fP 
.PP
\fBNOVAS_SYSTEM_J2000\fP 
.PP
\fBNOVAS_SYSTEM_B1950\fP
.RE
.PP
\fBSince\fP
.RS 4
1\&.3 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP

.PP
References \fBmake_redshifted_object()\fP, and \fBobject::star\fP\&.
.SS "void novas_case_sensitive (int value)"
Enables or disables case-sensitive processing of the object name\&. The effect is not retroactive\&. The setting will only affect the celestial objects that are defined after the call\&. Note, that catalog names, set via \fBmake_cat_entry()\fP are always case sensitive regardless of this setting\&.
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP (boolean) TRUE (non-zero) to enable case-sensitive object names, or else FALSE (0) to convert names to upper case only (NOVAS C compatible behavior)\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_object()\fP
.RE
.PP
\fBSince\fP
.RS 4
1\&.0 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP

.SS "double novas_helio_dist (double jd_tdb, const \fBobject\fP *restrict source, double *restrict rate)"
Returns a Solar-system body's distance from the Sun, and optionally also the rate of recession\&. It may be useful, e\&.g\&. to calculate the body's heating from the Sun\&.
.PP
\fBParameters\fP
.RS 4
\fIjd_tdb\fP [day] Barycentric Dynamical Time (TDB) based Julian date\&. You may want to use a time that is antedated to when the observed light originated from the source\&. 
.br
\fIsource\fP Observed Solar-system source 
.br
\fIrate\fP [AU/day] (optional) Returned rate of recession from Sun 
.RE
.PP
\fBReturns\fP
.RS 4
[AU] Distance from the Sun, or NAN if not a Solar-system source\&.
.RE
.PP
\fBSince\fP
.RS 4
1\&.3 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs
.RE
.PP
\fBSee also\fP
.RS 4
\fBnovas_solar_power()\fP 
.PP
\fBnovas_solar_illum()\fP 
.RE
.PP

.PP
References \fBephemeris()\fP, \fBNOVAS_CATALOG_OBJECT\fP, \fBNOVAS_HELIOCENTER\fP, \fBNOVAS_REDUCED_ACCURACY\fP, and \fBnovas_vlen()\fP\&.
.SS "enum \fBnovas_planet\fP novas_planet_for_name (const char *restrict name)"
Returns the NOVAS planet ID for a given name (case insensitive), or -1 if no match is found\&.
.PP
\fBParameters\fP
.RS 4
\fIname\fP The planet name, or that for the 'Sun', 'Moon' or 'SSB' (case insensitive)\&. The spelled out 'Solar System Barycenter' is also recognized with either spaces, hyphens ('-') or underscores ('_') separating the case insensitive words\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The NOVAS major planet ID, or -1 (errno set to EINVAL) if the input name is NULL or if there is no match for the name provided\&.
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs 
.RE
.PP
\fBSince\fP
.RS 4
1\&.2
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_planet()\fP 
.RE
.PP

.PP
References \fBNOVAS_PLANET_NAMES_INIT\fP, \fBNOVAS_PLANETS\fP, and \fBNOVAS_SSB\fP\&.
.SS "double novas_solar_power (double jd_tdb, const \fBobject\fP *restrict source)"
Returns the typical incident Solar power on a Solar-system body at the time of observation\&.
.PP
\fBParameters\fP
.RS 4
\fIjd_tdb\fP [day] Barycentric Dynamical Time (TDB) based Julian date\&. You may want to use a time that is antedated to when the observed light originated ( was reflected) from the source\&. 
.br
\fIsource\fP Observed Solar-system source 
.RE
.PP
\fBReturns\fP
.RS 4
[W/m\*{2\*} ] Incident Solar power on the illuminated side of the object, or NAN if not a Solar-system source or if the source is the Sun itself\&.
.RE
.PP
\fBSince\fP
.RS 4
1\&.3 
.RE
.PP
\fBAuthor\fP
.RS 4
Attila Kovacs
.RE
.PP
\fBSee also\fP
.RS 4
\fBnovas_solar_illum()\fP 
.RE
.PP

.PP
References \fBnovas_helio_dist()\fP, and \fBNOVAS_SOLAR_CONSTANT\fP\&.
.SS "int proper_motion (double jd_tdb_in, const double * pos, const double *restrict vel, double jd_tdb_out, double * out)"
Applies proper motion, including foreshortening effects, to a star's position\&.
.PP
REFERENCES: 
.PD 0
.IP "1." 4
Kaplan, G\&. H\&. et\&. al\&. (1989)\&. Astron\&. Journ\&. 97, 1197-1210\&. 
.PP
.PP
\fBParameters\fP
.RS 4
\fIjd_tdb_in\fP [day] Barycentric Dynamical Time (TDB) based Julian date of the first epoch\&. 
.br
\fIpos\fP [AU] Position vector at first epoch\&. 
.br
\fIvel\fP [AU/day] Velocity vector at first epoch\&. 
.br
\fIjd_tdb_out\fP [day] Barycentric Dynamical Time (TDB) based Julian date of the second epoch\&. 
.br
\fIout\fP Position vector at second epoch\&. It can be the same vector as the input\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or -1 if any of the vector areguments is NULL\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBtransform_cat()\fP 
.RE
.PP

.SS "int starvectors (const \fBcat_entry\fP *restrict star, double *restrict pos, double *restrict motion)"
Converts angular quantities for stars to vectors\&.
.PP
NOTES: 
.PD 0
.IP "1." 4
The velocity returned should not be used for deriving spectroscopic radial velocity\&. It is a measure of the perceived change of the stars position, not a true physical velocity\&. 
.PP
.PP
REFERENCES: 
.PD 0
.IP "1." 4
Kaplan, G\&. H\&. et\&. al\&. (1989)\&. Astron\&. Journ\&. 97, 1197-1210\&. 
.PP
.PP
\fBParameters\fP
.RS 4
\fIstar\fP Pointer to catalog entry structure containing ICRS catalog 
.br
\fIpos\fP [AU] Position vector, equatorial rectangular coordinates, components in AU\&. It may be NULL if not required\&. 
.br
\fImotion\fP [AU/day] Perceived motion of star, in equatorial rectangular coordinates, components in AU/Day\&. It must be distinct from the pos output vector, and may be NULL if not required\&. Note, that it is suitable only for calculating the apparent 3D location of the star at a different time, and should not be used as a measure of physical velocity, e\&.g\&. for spectroscopic radial velocity determination\&.
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or -1 if the star argument is NULL or the output vectors are the same pointer\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_cat_entry()\fP 
.RE
.PP

.PP
References \fBNOVAS_KMS\fP, \fBnovas_los_to_xyz()\fP, and \fBradec2vector()\fP\&.
.SS "short transform_cat (enum \fBnovas_transform_type\fP option, double jd_tt_in, const \fBcat_entry\fP * in, double jd_tt_out, const char * out_id, \fBcat_entry\fP * out)"
Transform a star's catalog quantities for a change the coordinate system and/or the date for which the positions are calculated\&. Also used to rotate catalog quantities on the dynamical equator and equinox of J2000\&.0 to the ICRS or vice versa\&.
.PP
'date_incat' and 'date_newcat' may be specified either as a Julian date (e\&.g\&., 2433282\&.5 or NOVAS_JD_B1950) or a fractional Julian year and fraction (e\&.g\&., 1950\&.0)\&. Values less than 10000 are assumed to be years\&. You can also use the supplied constants NOVAS_JD_J2000 or NOVAS_JD_B1950\&. The date arguments are ignored for the ICRS frame conversion options\&.
.PP
If 'option' is PROPER_MOTION (1), input data can be in any reference system\&. If 'option' is PRECESSION (2) or CHANGE_EPOCH (3), input data is assume to be in the dynamical system of 'date_incat' and produces output in the dynamical system of 'date_outcat'\&. If 'option' is CHANGE_J2000_TO_ICRS (4), the input data should be in the J2000\&.0 dynamical frame\&. And if 'option' is CHANGE_ICRS_TO_J2000 (5), the input data must be in the ICRS, and the output will be in the J2000 dynamical frame\&.
.PP
This function cannot be properly used to bring data from old star catalogs into the modern system, because old catalogs were compiled using a set of constants that are incompatible with modern values\&. In particular, it should not be used for catalogs whose positions and proper motions were derived by assuming a precession constant significantly different from the value implicit in function \fBprecession()\fP\&.
.PP
\fBParameters\fP
.RS 4
\fIoption\fP Type of transformation 
.br
\fIjd_tt_in\fP [day|yr] Terrestrial Time (TT) based Julian date, or year, of input catalog data\&. Not used if option is CHANGE_J2000_TO_ICRS (4) or CHANGE_ICRS_TO_J2000 (5)\&. 
.br
\fIin\fP An entry from the input catalog, with units as given in the struct definition 
.br
\fIjd_tt_out\fP [day|yr] Terrestrial Time (TT) based Julian date, or year, of output catalog data\&. Not used if option is CHANGE_J2000_TO_ICRS (4) or CHANGE_ICRS_TO_J2000 (5)\&. 
.br
\fIout_id\fP Catalog identifier (0 terminated)\&. It may also be NULL in which case the catalog name is inherited from the input\&. 
.br
\fIout\fP The transformed catalog entry, with units as given in the struct definition\&. It may be the same as the input\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, -1 if either vector argument is NULL or if the 'option' is invalid, or else 2 if 'out_id' is too long\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBtransform_hip()\fP 
.PP
\fBmake_cat_entry()\fP 
.PP
\fBnovas_epoch()\fP 
.PP
\fBNOVAS_JD_J2000\fP 
.PP
\fBNOVAS_JD_B1950\fP 
.PP
\fBNOVAS_JD_HIP\fP 
.RE
.PP

.PP
References \fBcat_entry::catalog\fP, \fBCHANGE_EPOCH\fP, \fBCHANGE_ICRS_TO_J2000\fP, \fBCHANGE_J2000_TO_ICRS\fP, \fBcat_entry::dec\fP, \fBframe_tie()\fP, \fBICRS_TO_J2000\fP, \fBJ2000_TO_ICRS\fP, \fBNOVAS_JD_J2000\fP, \fBNOVAS_KMS\fP, \fBnovas_los_to_xyz()\fP, \fBnovas_vlen()\fP, \fBnovas_xyz_to_los()\fP, \fBcat_entry::parallax\fP, \fBPRECESSION\fP, \fBprecession()\fP, \fBcat_entry::promodec\fP, \fBcat_entry::promora\fP, \fBPROPER_MOTION\fP, \fBcat_entry::ra\fP, \fBradec2vector()\fP, \fBcat_entry::radialvelocity\fP, \fBSIZE_OF_CAT_NAME\fP, \fBSIZE_OF_OBJ_NAME\fP, \fBcat_entry::starname\fP, and \fBcat_entry::starnumber\fP\&.
.SS "int transform_hip (const \fBcat_entry\fP * hipparcos, \fBcat_entry\fP * hip_2000)"
Convert Hipparcos catalog data at epoch J1991\&.25 to epoch J2000\&.0, for use within NOVAS\&. To be used only for Hipparcos or Tycho stars with linear space motion\&. Both input and output data is in the ICRS\&.
.PP
\fBParameters\fP
.RS 4
\fIhipparcos\fP An entry from the Hipparcos catalog, at epoch J1991\&.25, with 'ra' in degrees(!) as per Hipparcos catalog units\&. 
.br
\fIhip_2000\fP The transformed input entry, at epoch J2000\&.0, with 'ra' in hours(!) as per the NOVAS convention\&. It may be the same as the input\&.
.RE
.PP
\fBReturns\fP
.RS 4
0 if successful, or -1 if either of the input pointer arguments is NULL\&.
.RE
.PP
\fBSee also\fP
.RS 4
\fBmake_cat_entry()\fP 
.PP
\fBNOVAS_JD_HIP\fP 
.RE
.PP

.PP
References \fBcat_entry::catalog\fP, \fBNOVAS_JD_HIP\fP, \fBcat_entry::ra\fP, and \fBtransform_cat()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for SuperNOVAS from the source code\&.
